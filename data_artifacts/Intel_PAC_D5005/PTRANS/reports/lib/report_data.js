var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[24.7742, 13.091, 12.5014, 23.5134, 0.329861], "total":[242890, 466613, 2756, 19, 71], "name":"Kernel System", "max_resources":[1866240, 3732480, 11721, 5760, 93312], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[220164, 440329, 572, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[4121, 5284, 0, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 2 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[2, 71, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"transpose", "compute_units":1, "type":"function", "total_percent":[1.52019, 1.07291, 0.560726, 18.6162, 0.329861], "total_kernel_resources":[18603, 20929, 2182, 19, 71], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nMax global work dimension: 0\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"copied_transpose_optimized_intel.cl:40 (a_block)", "type":"resource", "data":[0, 0, 2048, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":40}]], "details":[{"type":"table", "Private memory":"Stall-Free with Replication", "Requested size":"1048576 bytes", "Implemented size":"4194304 bytes", "Number of banks":"16 (banked on bits 2, 3, 4, 5)", "Bank width":"32 bits", "Bank depth":"16384 words", "Total replication":"4", "Additional information":[{"type":"text", "text":"Requested size 1048576 bytes, implemented size 4194304 bytes, replicated 4 times total, stall-free, 16 reads and 16 writes. "}, {"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"36"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}, {"type":"text", "text":"Banked on bits 2, 3, 4, 5 into 16 separate banks."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free with Replication,\\n1048576B requested,\\n4194304B implemented."}]}, {"name":"transpose.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[0, 102, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[0, 68, 0, 0, 0]}, {"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[0, 34, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[10, 9, 1, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[143, 33, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":2, "data":[46, 1, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[32, 32, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"transpose.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[47, 53, 2, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[47, 53, 2, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[114, 269, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[65, 139, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]]}, {"name":"copied_transpose_optimized_intel.cl:37", "type":"resource", "data":[49, 130, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":37}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[46, 75, 2, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[158, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[26, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"33-bit Select", "type":"resource", "count":2, "data":[54, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:37", "type":"resource", "data":[146, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":37}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"33-bit Select", "type":"resource", "count":2, "data":[54, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"transpose.B4", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[244, 4371, 9, 0, 9], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[244, 4371, 9, 0, 9]}]}, {"name":"Feedback", "type":"resource", "data":[213, 351, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[16, 20, 0, 0, 0]}, {"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[43, 66, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]]}, {"name":"copied_transpose_optimized_intel.cl:37", "type":"resource", "data":[34, 64, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":37}]]}, {"name":"copied_transpose_optimized_intel.cl:44", "type":"resource", "data":[85, 125, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":44}]]}, {"name":"copied_transpose_optimized_intel.cl:45", "type":"resource", "data":[35, 76, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":45}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[176, 321, 8, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"copied_transpose_optimized_intel.cl:44", "type":"resource", "data":[82, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":44}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"10-bit Integer Add", "type":"resource", "count":1, "data":[10, 0, 0, 0, 0]}, {"name":"10-bit Integer Compare", "type":"resource", "count":1, "data":[3, 0, 0, 0, 0]}, {"name":"10-bit Select", "type":"resource", "count":1, "data":[8, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[26, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:45", "type":"resource", "data":[60, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":45}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"6-bit Integer Add", "type":"resource", "count":1, "data":[6, 0, 0, 0, 0]}, {"name":"6-bit Integer Compare", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}, {"name":"6-bit Select", "type":"resource", "count":1, "data":[3, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:47", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":47}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:53", "type":"resource", "data":[476, 1957, 16, 0, 26], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":53}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[51, 0, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[425, 1957, 16, 0, 26], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:54", "type":"resource", "data":[78, 46, 0, 1.5, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":54}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[46, 46, 0, 1.5, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:63", "type":"resource", "data":[6688, 896, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "children":[{"name":"32-bit Integer Subtract", "type":"resource", "count":16, "data":[512, 0, 0, 0, 0]}, {"name":"Store", "type":"resource", "count":16, "data":[544, 384, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"40"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}, {"name":"llvm.fpga.case", "type":"resource", "count":48, "data":[5632, 512, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"transpose.B5", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[264, 4197, 30, 0, 10], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[264, 4197, 30, 0, 10]}]}, {"name":"Feedback", "type":"resource", "data":[312, 555, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[59, 128, 0, 0, 0]}, {"name":"copied_transpose_optimized_intel.cl:32", "type":"resource", "data":[34, 64, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":32}]]}, {"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[9, 2, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]]}, {"name":"copied_transpose_optimized_intel.cl:53", "type":"resource", "data":[56, 96, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":53}]]}, {"name":"copied_transpose_optimized_intel.cl:54", "type":"resource", "data":[34, 64, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":54}]]}, {"name":"copied_transpose_optimized_intel.cl:71", "type":"resource", "data":[85, 125, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":71}]]}, {"name":"copied_transpose_optimized_intel.cl:72", "type":"resource", "data":[35, 76, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":72}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[635, 1239, 32, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"copied_transpose_optimized_intel.cl:36", "type":"resource", "data":[8, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]], "children":[{"name":"1-bit Or", "type":"resource", "count":16, "data":[8, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:71", "type":"resource", "data":[58, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":71}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":17, "data":[9, 0, 0, 0, 0]}, {"name":"10-bit Integer Add", "type":"resource", "count":1, "data":[10, 0, 0, 0, 0]}, {"name":"10-bit Integer Compare", "type":"resource", "count":1, "data":[3, 0, 0, 0, 0]}, {"name":"10-bit Select", "type":"resource", "count":1, "data":[8, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[26, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:72", "type":"resource", "data":[60, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":72}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[16, 0, 0, 0, 0]}, {"name":"6-bit Integer Add", "type":"resource", "count":1, "data":[6, 0, 0, 0, 0]}, {"name":"6-bit Integer Compare", "type":"resource", "count":1, "data":[2, 0, 0, 0, 0]}, {"name":"6-bit Select", "type":"resource", "count":1, "data":[3, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:82", "type":"resource", "data":[64, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":82}]], "children":[{"name":"32-bit Integer Subtract", "type":"resource", "count":16, "data":[64, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:84", "type":"resource", "data":[544, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":84}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":17, "data":[544, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:85", "type":"resource", "data":[144, 128, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "children":[{"name":"Load", "type":"resource", "count":16, "data":[144, 128, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"40"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:94", "type":"resource", "data":[345, 2788, 18, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":94}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[345, 2788, 18, 0, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:95", "type":"resource", "data":[6112, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":95}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":15, "data":[480, 0, 0, 0, 0]}, {"name":"llvm.fpga.case", "type":"resource", "count":48, "data":[5632, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:96", "type":"resource", "data":[1312, 3539, 16, 17.5, 26], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":96}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":2, "data":[64, 0, 0, 0, 0]}, {"name":"32-bit Integer Multiply", "type":"resource", "count":1, "data":[55, 46, 0, 1.5, 0]}, {"name":"Hardened Floating-point Add", "type":"resource", "count":16, "data":[768, 1536, 0, 16, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[425, 1957, 16, 0, 26], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"copied_transpose_optimized_intel.cl:97", "type":"resource", "data":[32, 0, 0, 0, 0], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":97}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[220164,440329,572,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[4121,5284,0,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 2 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[2,71,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[1506,2819,43,0,0],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[0,0,2048,0,0],"details":[{"Additional information":[{"text":"Requested size 1048576 bytes, implemented size 4194304 bytes, replicated 4 times total, stall-free, 16 reads and 16 writes. ","type":"text"},{"links":[{"filename":"copied_transpose_optimized_intel.cl","line":36}],"text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)","type":"text"},{"text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details.","type":"text"},{"text":"Banked on bits 2, 3, 4, 5 into 16 separate banks.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"16384 words","Bank width":"32 bits","Implemented size":"4194304 bytes","Number of banks":"16 (banked on bits 2, 3, 4, 5)","Private memory":"Stall-Free with Replication","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"1048576 bytes","Total replication":4,"type":"table"},{"text":"Stall-Free with Replication,\\n1048576B requested,\\n4194304B implemented.","type":"brief"}],"name":"copied_transpose_optimized_intel.cl:40 (a_block)","type":"resource"},{"children":[{"count":4,"data":[555,8689,41,0,19],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[555,8689,41,0,19],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,34,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"State","type":"resource"},{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"32-bit Integer Add","type":"resource"},{"count":2,"data":[46,1,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"32-bit Integer Compare","type":"resource"},{"count":2,"data":[58,32,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"32-bit Select","type":"resource"},{"count":2,"data":[66,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"1-bit And","type":"resource"},{"count":17,"data":[9,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"33-bit Integer Compare","type":"resource"},{"count":2,"data":[54,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"33-bit Select","type":"resource"}],"data":[309,67,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":36}]],"name":"copied_transpose_optimized_intel.cl:36","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[33,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"33-bit Integer Compare","type":"resource"},{"count":2,"data":[54,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"33-bit Select","type":"resource"}],"data":[146,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":37}]],"name":"copied_transpose_optimized_intel.cl:37","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[10,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"10-bit Integer Add","type":"resource"},{"count":1,"data":[3,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"10-bit Integer Compare","type":"resource"},{"count":1,"data":[8,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"10-bit Select","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[26,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"32-bit Select","type":"resource"}],"data":[82,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":44}]],"name":"copied_transpose_optimized_intel.cl:44","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[6,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"6-bit Integer Add","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"6-bit Integer Compare","type":"resource"},{"count":1,"data":[3,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"6-bit Select","type":"resource"}],"data":[60,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":45}]],"name":"copied_transpose_optimized_intel.cl:45","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":47}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":47}]],"name":"copied_transpose_optimized_intel.cl:47","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[51,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":53}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[425,1957,16,0,26],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":53}]],"name":"Load","type":"resource"}],"data":[476,1957,16,0,26],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":53}]],"name":"copied_transpose_optimized_intel.cl:53","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":54}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[46,46,0,1.5,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":54}]],"name":"32-bit Integer Multiply","type":"resource"}],"data":[78,46,0,1.5,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":54}]],"name":"copied_transpose_optimized_intel.cl:54","replace_name":"true","type":"resource"},{"children":[{"count":16,"data":[512,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":63}]],"name":"32-bit Integer Subtract","type":"resource"},{"count":16,"data":[544,384,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":63}]],"name":"Store","type":"resource"},{"count":48,"data":[5632,512,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":63}]],"name":"llvm.fpga.case","type":"resource"}],"data":[6688,896,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":63}]],"name":"copied_transpose_optimized_intel.cl:63","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[2,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"1-bit And","type":"resource"},{"count":17,"data":[9,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"1-bit Or","type":"resource"},{"count":1,"data":[10,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"10-bit Integer Add","type":"resource"},{"count":1,"data":[3,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"10-bit Integer Compare","type":"resource"},{"count":1,"data":[8,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"10-bit Select","type":"resource"},{"count":1,"data":[26,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"32-bit Select","type":"resource"}],"data":[58,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":71}]],"name":"copied_transpose_optimized_intel.cl:71","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[16,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"32-bit Select","type":"resource"},{"count":1,"data":[6,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"6-bit Integer Add","type":"resource"},{"count":1,"data":[2,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"6-bit Integer Compare","type":"resource"},{"count":1,"data":[3,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"6-bit Select","type":"resource"}],"data":[60,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":72}]],"name":"copied_transpose_optimized_intel.cl:72","replace_name":"true","type":"resource"},{"children":[{"count":16,"data":[64,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":82}]],"name":"32-bit Integer Subtract","type":"resource"}],"data":[64,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":82}]],"name":"copied_transpose_optimized_intel.cl:82","replace_name":"true","type":"resource"},{"children":[{"count":17,"data":[544,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":84}]],"name":"32-bit Integer Add","type":"resource"}],"data":[544,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":84}]],"name":"copied_transpose_optimized_intel.cl:84","replace_name":"true","type":"resource"},{"children":[{"count":16,"data":[144,128,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":85}]],"name":"Load","type":"resource"}],"data":[144,128,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":85}]],"name":"copied_transpose_optimized_intel.cl:85","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[345,2788,18,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":94}]],"name":"Store","type":"resource"}],"data":[345,2788,18,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":94}]],"name":"copied_transpose_optimized_intel.cl:94","replace_name":"true","type":"resource"},{"children":[{"count":15,"data":[480,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":95}]],"name":"32-bit Integer Add","type":"resource"},{"count":48,"data":[5632,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":95}]],"name":"llvm.fpga.case","type":"resource"}],"data":[6112,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":95}]],"name":"copied_transpose_optimized_intel.cl:95","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":96}]],"name":"32-bit Integer Add","type":"resource"},{"count":1,"data":[55,46,0,1.5,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":96}]],"name":"32-bit Integer Multiply","type":"resource"},{"count":16,"data":[768,1536,0,16,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":96}]],"name":"Hardened Floating-point Add","type":"resource"},{"count":1,"data":[425,1957,16,0,26],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":96}]],"name":"Load","type":"resource"}],"data":[1312,3539,16,17.5,26],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":96}]],"name":"copied_transpose_optimized_intel.cl:96","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":97}]],"name":"32-bit Integer Add","type":"resource"}],"data":[32,0,0,0,0],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":97}]],"name":"copied_transpose_optimized_intel.cl:97","replace_name":"true","type":"resource"}],"compute_units":1,"data":[18603,20929,2182,19,71],"debug":[[{"filename":"copied_transpose_optimized_intel.cl","line":40}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Max global work dimension: 0","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nMax global work dimension: 0\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"transpose","total_kernel_resources":[18603,20929,2182,19,71],"total_percent":[1.52019,1.07291,0.560726,18.6162,0.329861],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[22726,26284,2184,19,71],"debug_enabled":"true","max_resources":[1866240,3732480,11721,5760,93312],"name":"Kernel System","total":[242890,466613,2756,19,71],"total_percent":[24.7742,13.091,12.5014,23.5134,0.329861],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"transpose", "children":[{"type":"bb", "id":3, "name":"transpose.B0", "details":[{"type":"table", "Latency":"35"}]}, {"type":"bb", "id":4, "name":"transpose.B1", "details":[{"type":"table", "Latency":"52", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. "}]}, {"type":"bb", "id":5, "name":"transpose.B2", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":6, "name":"transpose.B3", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":7, "name":"transpose.B4", "children":[{"type":"inst", "id":10, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":53}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"49", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":11, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":12, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":13, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":14, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":15, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":16, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":17, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":18, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":19, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":20, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":21, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":22, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":23, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":24, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":25, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":26, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":63}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"a_block", "Start Cycle":"565", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":45, "name":"Loop Input", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":44}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"46"}]}, {"type":"inst", "id":46, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"597", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"597", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":8, "name":"transpose.B5", "children":[{"type":"inst", "id":27, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":28, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":29, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":30, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":31, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":32, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":33, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":34, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":35, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":36, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":37, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":38, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":39, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":40, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":41, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":42, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":85}]], "details":[{"type":"table", "Width":"32 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"a_block", "Start Cycle":"11", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":43, "name":"Load", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":96}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"49", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":44, "name":"Store", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":94}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"597", "Latency":"64", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":47, "name":"Loop Input", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":71}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"48"}]}, {"type":"inst", "id":48, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"661", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"661", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":9, "name":"transpose.B6", "details":[{"type":"table", "Latency":"0"}]}, {"type":"memtype", "id":49, "name":"Local Memory", "children":[{"type":"memsys", "id":50, "name":"a_block", "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":40}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"1048576B requested\\n4194304B implemented"}], "Requested size":"1048576 bytes", "Implemented size":"4194304 bytes", "Number of banks":"16", "Bank width":"32 bits", "Bank depth":"16384 words", "Total replication":"4", "Additional Information":[{"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"36"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}], "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":99, "name":"host", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":50, "to":27}, {"from":50, "to":28}, {"from":50, "to":29}, {"from":50, "to":30}, {"from":50, "to":31}, {"from":50, "to":32}, {"from":50, "to":33}, {"from":50, "to":34}, {"from":50, "to":35}, {"from":50, "to":36}, {"from":50, "to":37}, {"from":50, "to":38}, {"from":50, "to":39}, {"from":50, "to":40}, {"from":50, "to":41}, {"from":50, "to":42}, {"from":11, "to":50}, {"from":12, "to":50}, {"from":13, "to":50}, {"from":14, "to":50}, {"from":15, "to":50}, {"from":16, "to":50}, {"from":17, "to":50}, {"from":18, "to":50}, {"from":19, "to":50}, {"from":20, "to":50}, {"from":21, "to":50}, {"from":22, "to":50}, {"from":23, "to":50}, {"from":24, "to":50}, {"from":25, "to":50}, {"from":26, "to":50}, {"from":3, "to":4}, {"from":9, "to":5}, {"from":46, "to":6}, {"from":4, "to":45}, {"from":10, "to":46}, {"from":11, "to":46}, {"from":12, "to":46}, {"from":13, "to":46}, {"from":14, "to":46}, {"from":15, "to":46}, {"from":16, "to":46}, {"from":17, "to":46}, {"from":18, "to":46}, {"from":19, "to":46}, {"from":20, "to":46}, {"from":21, "to":46}, {"from":22, "to":46}, {"from":23, "to":46}, {"from":24, "to":46}, {"from":25, "to":46}, {"from":26, "to":46}, {"from":6, "to":47}, {"from":27, "to":48}, {"from":28, "to":48}, {"from":29, "to":48}, {"from":30, "to":48}, {"from":31, "to":48}, {"from":32, "to":48}, {"from":33, "to":48}, {"from":34, "to":48}, {"from":35, "to":48}, {"from":36, "to":48}, {"from":37, "to":48}, {"from":38, "to":48}, {"from":39, "to":48}, {"from":40, "to":48}, {"from":41, "to":48}, {"from":42, "to":48}, {"from":43, "to":48}, {"from":44, "to":48}, {"from":48, "to":9}, {"from":45, "to":10}, {"from":10, "to":11}, {"from":10, "to":12}, {"from":10, "to":13}, {"from":10, "to":14}, {"from":10, "to":15}, {"from":10, "to":16}, {"from":10, "to":17}, {"from":10, "to":18}, {"from":10, "to":19}, {"from":10, "to":20}, {"from":10, "to":21}, {"from":10, "to":22}, {"from":10, "to":23}, {"from":10, "to":24}, {"from":10, "to":25}, {"from":10, "to":26}, {"from":47, "to":27}, {"from":47, "to":28}, {"from":47, "to":29}, {"from":47, "to":30}, {"from":47, "to":31}, {"from":47, "to":32}, {"from":47, "to":33}, {"from":47, "to":34}, {"from":47, "to":35}, {"from":47, "to":36}, {"from":47, "to":37}, {"from":47, "to":38}, {"from":47, "to":39}, {"from":47, "to":40}, {"from":47, "to":41}, {"from":47, "to":42}, {"from":27, "to":43}, {"from":28, "to":43}, {"from":29, "to":43}, {"from":30, "to":43}, {"from":31, "to":43}, {"from":32, "to":43}, {"from":33, "to":43}, {"from":34, "to":43}, {"from":35, "to":43}, {"from":36, "to":43}, {"from":37, "to":43}, {"from":38, "to":43}, {"from":39, "to":43}, {"from":40, "to":43}, {"from":41, "to":43}, {"from":42, "to":43}, {"from":27, "to":44}, {"from":28, "to":44}, {"from":29, "to":44}, {"from":30, "to":44}, {"from":31, "to":44}, {"from":32, "to":44}, {"from":33, "to":44}, {"from":34, "to":44}, {"from":35, "to":44}, {"from":36, "to":44}, {"from":37, "to":44}, {"from":38, "to":44}, {"from":39, "to":44}, {"from":40, "to":44}, {"from":41, "to":44}, {"from":42, "to":44}, {"from":43, "to":44}, {"from":44, "to":99}, {"from":99, "to":10}, {"from":99, "to":43}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: transpose", "data":["", "", ""], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":27}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"transpose.B1", "data":["Yes", ">=1", "4"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":36}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"Coalesced loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":37}]], "details":[{"type":"text", "text":"Coalesced by #pragma loop_coalesce"}], "children":[]}, {"name":"transpose.B4", "data":["Yes", "~1", "9"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":44}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instruction:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"53"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Coalesced loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":45}]], "details":[{"type":"text", "text":"Coalesced by #pragma loop_coalesce"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":52}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":61}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}, {"name":"transpose.B5", "data":["Yes", "~1", "5"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":71}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"96"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"94"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[{"name":"Coalesced loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":72}]], "details":[{"type":"text", "text":"Coalesced by #pragma loop_coalesce"}], "children":[{"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":81}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}, {"name":"Fully unrolled loop", "data":["n/a", "n/a", "n/a"], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":91}]], "details":[{"type":"brief", "text":"Unrolled by #pragma unroll"}, {"type":"text", "text":"Unrolled by #pragma unroll"}], "children":[]}]}]}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"transpose.B0":{"name":"transpose.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":35, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "transpose.B1":{"name":"transpose.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":52, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"36"}]}]}}, "transpose.B2":{"name":"transpose.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "transpose.B3":{"name":"transpose.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "transpose.B4":{"name":"transpose.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":597, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"44"}]}]}}, "transpose.B5":{"name":"transpose.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":661, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"copied_transpose_optimized_intel.cl", "line":"71"}]}]}}, "transpose.B6":{"name":"transpose.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}}, "functions":{"transpose":{"debug":[{"filename":"copied_transpose_optimized_intel.cl", "line":27}], "loop_hierachy":{"transpose__no_loop":["transpose.B0", "transpose.B2"], "transpose.B1":["transpose.B1", "transpose.B3", "transpose.B4", "transpose.B5", "transpose.B6"], "transpose.B4":["transpose.B4"], "transpose.B5":["transpose.B5"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units", "Hyper-Optimized Handshaking"], "children":[{"name":"transpose", "data":["Single work-item", "No", [1, 1, 1], 1, "On"], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":27}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"transpose", "data":[18603, 20929, 2182, 19, 71], "debug":[[{"filename":"copied_transpose_optimized_intel.cl", "line":27}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[4121, 5284, 0, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[220164, 440329, 572, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[2, 71, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[242890, 466613, 2756, 19, 71], "data_percent":[13.0149, 12.5014, 23.5134, 0.329861]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[1866240, 3732480, 11721, 5760, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["transpose_optimized"],"name":"Project Name"},{"data":["Stratix 10, 1SX280HN2F43E2VG, dcp_bsp:pac_s10_dc"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":["18.1.2 Build 277 Pro"],"name":"Quartus Version"},{"data":["aoc /scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/copied_transpose_optimized_intel.cl -DINTEL_FPGA -I/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/../common -I/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/PTRANS/src/device -fpc -fp-relaxed -board=pac_s10_dc -o /scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/bin/transpose_optimized.aocx"],"name":"Command"},{"data":["Wed May 27 09:35:10 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[{"debug":[[{"filename":"/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/copied_transpose_optimized_intel.cl","line":40}]],"details":["/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/copied_transpose_optimized_intel.cl:40:117: warning: unknown attribute \'xcl_array_partition\' ignored"],"name":"unknown attribute \'xcl_array_partition\' ignored"}]}';
var quartusJSON='{"quartusFitClockSummary":{"children":[{"details":[{"text":"This section contains a summary of the area and f<sub>MAX</sub> data generated by compiling the kernels through Quartus. \nTo generate the data, run a Quartus compile on the project created for this design. \nTo run the Quartus compile, please run command without flag -c, -rtl or -march=emulator","type":"text"}],"name":"Run Quartus compile to populate this section. See details for more information."}],"name":"Quartus Fit Summary"}}';
var fileJSON=[{"path":"/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/copied_transpose_optimized_intel.cl", "name":"copied_transpose_optimized_intel.cl", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/device/copied_transpose_optimized_intel.cl", "content":"/******************************************************************************\012 *  Author: Arjun Ramaswami\012 *\012 *  Edited by Marius Meyer:\012 *  - Adapt to used kernel signature\012 *  - Change to row-column loop structure\012 *****************************************************************************/\012\012#include \"parameters.h\"\012\012/**\012 * Optimized matrix transposition that simplifies local memory accesses.\012 *\012 * Will do the following:\012 *\012 * A_out = trans(A) + B\012 *\012 * where A_out, A and B are matrices of size matrixSize*matrixSize\012 *\012 * @param A Buffer for matrix A\012 * @param B Buffer for matrix B\012 * @param A_out Output buffer for result matrix\012 * @param matrixSize Size of the matrices. Must be multiple of BLOCK_SIZE\012 */\012__attribute__((max_global_work_dim(0)))\012__kernel\012void transpose(__global DEVICE_DATA_TYPE *restrict A,\012            __global DEVICE_DATA_TYPE *restrict B,\012            __global DEVICE_DATA_TYPE *restrict A_out,\012            const uint number_of_blocks) {\012\012    const unsigned matrixSize = number_of_blocks * BLOCK_SIZE;\012\012    // transpose the matrix block-wise from global memory\012#pragma loop_coalesce 2\012    for (int block_row = 0; block_row < number_of_blocks; block_row++) {\012        for (int block_col = 0; block_col < number_of_blocks; block_col++) {\012\012            // local memory buffer for a matrix block\012            DEVICE_DATA_TYPE a_block[BLOCK_SIZE * BLOCK_SIZE / GLOBAL_MEM_UNROLL][GLOBAL_MEM_UNROLL] __attribute__((xcl_array_partition(cyclic, GLOBAL_MEM_UNROLL,1))) __attribute__((xcl_array_partition(cyclic, GLOBAL_MEM_UNROLL,2)));\012\012            // read in block from global memory and store it in a memory efficient manner\012#pragma loop_coalesce 2\012            for (int row = 0; row < BLOCK_SIZE; row++) {\012                for (int col = 0; col < BLOCK_SIZE / GLOBAL_MEM_UNROLL; col++) {\012\012                    unsigned local_mem_converted_row = row * (BLOCK_SIZE / GLOBAL_MEM_UNROLL) + col;\012\012                    DEVICE_DATA_TYPE rotate_in[GLOBAL_MEM_UNROLL];\012\012__attribute__((opencl_unroll_hint(GLOBAL_MEM_UNROLL)))\012                    for (unsigned unroll_count = 0; unroll_count < GLOBAL_MEM_UNROLL; unroll_count++) {\012                        rotate_in[unroll_count] = A[block_col * BLOCK_SIZE + col * GLOBAL_MEM_UNROLL + unroll_count +\012                                                                                (block_row * BLOCK_SIZE + row) * matrixSize];\012                    }\012\012                    unsigned rot = row & (GLOBAL_MEM_UNROLL - 1);\012\012                    // rotate temporary buffer to store data into local buffer\012__attribute__((opencl_unroll_hint(GLOBAL_MEM_UNROLL)))\012                    for (unsigned unroll_count = 0; unroll_count < GLOBAL_MEM_UNROLL; unroll_count++) {\012                        // every block of (N / GLOBAL_MEM_UNROLL), rotates the index by 1\012                        a_block[local_mem_converted_row][unroll_count] = rotate_in[(unroll_count + GLOBAL_MEM_UNROLL - rot)\012                                                                                                    & (GLOBAL_MEM_UNROLL - 1)];\012                    }\012                }\012            }\012\012        // complete matrix transposition and write the result back to global memory\012#pragma loop_coalesce 2\012        for (int row = 0; row < BLOCK_SIZE; row++) {\012            for (int col = 0; col < BLOCK_SIZE / GLOBAL_MEM_UNROLL; col++) {\012\012                    DEVICE_DATA_TYPE rotate_out[GLOBAL_MEM_UNROLL];\012\012                    unsigned base = col * BLOCK_SIZE;\012                    unsigned offset = row / GLOBAL_MEM_UNROLL;\012\012\012__attribute__((opencl_unroll_hint(GLOBAL_MEM_UNROLL)))\012                    for (unsigned unroll_count = 0; unroll_count < GLOBAL_MEM_UNROLL; unroll_count++) {\012                        unsigned rot = ((GLOBAL_MEM_UNROLL + unroll_count - row) * (BLOCK_SIZE / GLOBAL_MEM_UNROLL)) &\012                                                                                                    (BLOCK_SIZE - 1);\012                        unsigned row_rotate = base + offset + rot;\012                        rotate_out[unroll_count] = a_block[row_rotate][unroll_count];\012                    }\012\012                    unsigned rot_out = row & (GLOBAL_MEM_UNROLL - 1);\012                    // rotate temporary buffer to store data into local buffer\012__attribute__((opencl_unroll_hint(GLOBAL_MEM_UNROLL)))\012                    for (unsigned unroll_count = 0; unroll_count < GLOBAL_MEM_UNROLL; unroll_count++) {\012\012                        A_out[(block_col * BLOCK_SIZE + row) * matrixSize +\012                        block_row* BLOCK_SIZE + col * GLOBAL_MEM_UNROLL + unroll_count] =\012                        rotate_out[(unroll_count + rot_out) & (GLOBAL_MEM_UNROLL - 1)]\012                        + B[(block_col * BLOCK_SIZE + row) * matrixSize +\012                        block_row * BLOCK_SIZE + col * GLOBAL_MEM_UNROLL + unroll_count];\012                    }\012                }\012            }\012        }\012    }\012}"}, {"path":"/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/common/parameters.h", "name":"parameters.h", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/synth/HPCC_FPGA/build/synth-pacsvm/PTRANS/src/common/parameters.h", "content":"#ifndef SRC_COMMON_PARAMETERS_H_\012#define SRC_COMMON_PARAMETERS_H_\012\012#define VERSION \"1.1\"\012#define KERNEL_NAME \"transpose\"\012#define DEFAULT_REPETITIONS 10\012#define DEFAULT_MATRIX_SIZE 8\012#define DEFAULT_PLATFORM -1\012#define DEFAULT_DEVICE -1\012\012/**\012 * Kernel Parameters\012 */\012#define BLOCK_SIZE 512\012#define GLOBAL_MEM_UNROLL 16\012\012#define HOST_DATA_TYPE cl_float\012#define DEVICE_DATA_TYPE float\012\012/**\012Output separator\012*/\012#define HLINE \"-------------------------------------------------------------\\n\"\012\012#endif // SRC_COMMON_PARAMETERS_H_\012"}];
