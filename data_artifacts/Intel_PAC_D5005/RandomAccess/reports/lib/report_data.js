var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[23.5959, 12.1317, 12.1646, 5.58826, 0], "total":[225627, 454040, 655, 0, 39], "name":"Kernel System", "max_resources":[1866240, 3732480, 11721, 5760, 93312], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[220164, 440329, 572, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[2338, 4125, 0, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 1 global load and 1 global store."}, {"type":"brief", "text":"For 1 global load and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[2, 71, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"accessMemory_0", "compute_units":1, "type":"function", "total_percent":[0.45651, 0.209137, 0.254924, 0.691067, 0], "total_kernel_resources":[3123, 9515, 81, 0, 39], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}, {"type":"brief", "text":"1 compute unit.\\nMax global work dimension: 0\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality."}], "children":[{"name":"Private Variable: \\n - \'i\' (replicated_random_access_kernels_single.cl:58)", "type":"resource", "data":[8, 130, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 65"}, {"type":"brief", "text":"Register,\\n1 reg, 65 width"}]}, {"name":"Private Variable: \\n - \'ld\' (replicated_random_access_kernels_single.cl:66)", "type":"resource", "data":[14, 51, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":66}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11 and depth 1"}, {"type":"text", "text":"1 register of width 32 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width by 1 depth,\\n1 reg, 32 width by 1 depth"}]}, {"name":"Private Variable: \\n - \'ld\' (replicated_random_access_kernels_single.cl:97)", "type":"resource", "data":[16, 86, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":97}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 11"}, {"type":"text", "text":"1 register of width 32"}, {"type":"brief", "text":"Register,\\n1 reg, 11 width,\\n1 reg, 32 width"}]}, {"name":"Private Variable: \\n - \'ran\' (replicated_random_access_kernels_single.cl:47)", "type":"resource", "data":[40, 197, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":47}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 64 and depth 1"}, {"type":"brief", "text":"Register,\\n1 reg, 64 width by 1 depth"}]}, {"name":"replicated_random_access_kernels_single.cl:60 (local_address)", "type":"resource", "data":[0, 0, 13, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":60}]], "details":[{"type":"table", "Private memory":"Stall-Free with Replication", "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional information":[{"type":"text", "text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. "}, {"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented."}]}, {"name":"replicated_random_access_kernels_single.cl:61 (loaded_data)", "type":"resource", "data":[0, 0, 13, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":61}]], "details":[{"type":"table", "Private memory":"Stall-Free with Replication", "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional information":[{"type":"text", "text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. "}, {"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented."}]}, {"name":"replicated_random_access_kernels_single.cl:62 (update_val)", "type":"resource", "data":[0, 0, 13, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":62}]], "details":[{"type":"table", "Private memory":"Stall-Free with Replication", "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional information":[{"type":"text", "text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. "}, {"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}, {"type":"text", "text":"Private memory implemented in on-chip block RAM."}], "Reference":[{"type":"text", "text":"See %L for more information.", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}, {"type":"brief", "text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented."}]}, {"name":"accessMemory_0.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 303, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[1, 176, 0, 0, 0]}, {"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[0, 66, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]]}, {"name":"replicated_random_access_kernels_single.cl:73", "type":"resource", "data":[0, 61, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":73}]]}]}, {"name":"Feedback", "type":"resource", "data":[7, 2, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[7, 2, 0, 0, 0]}]}, {"name":"Cluster logic", "type":"resource", "data":[9, 7, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[241, 1, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":1, "data":[64, 0, 0, 0, 0]}, {"name":"64-bit Integer Compare", "type":"resource", "count":2, "data":[85, 1, 0, 0, 0]}, {"name":"64-bit Select", "type":"resource", "count":1, "data":[27, 0, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:73", "type":"resource", "data":[61, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":73}]], "children":[{"name":"64-bit Integer Add", "type":"resource", "count":1, "data":[61, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"accessMemory_0.B1", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[5, 8, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"replicated_random_access_kernels_single.cl:107", "type":"resource", "data":[5, 8, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":107}]]}]}]}, {"name":"accessMemory_0.B2", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[3, 10, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[3, 10, 0, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[90, 44, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[11, 11, 0, 0, 0]}, {"name":"replicated_random_access_kernels_single.cl:47", "type":"resource", "data":[33, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":47}]]}, {"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[16, 9, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]]}, {"name":"replicated_random_access_kernels_single.cl:60", "type":"resource", "data":[11, 11, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":60}]]}, {"name":"replicated_random_access_kernels_single.cl:61", "type":"resource", "data":[11, 11, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":61}]]}, {"name":"replicated_random_access_kernels_single.cl:99", "type":"resource", "data":[8, 2, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[14, 10, 0, 0, 1], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"replicated_random_access_kernels_single.cl:47", "type":"resource", "data":[52, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":47}]], "children":[{"name":"65-bit Select", "type":"resource", "count":1, "data":[52, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[88, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"65-bit Integer Add", "type":"resource", "count":1, "data":[65, 0, 0, 0, 0]}, {"name":"65-bit Integer Compare", "type":"resource", "count":1, "data":[22, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"accessMemory_0.B4", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[196, 1458, 6, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[196, 1458, 6, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[67, 72, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[8, 14, 0, 0, 0]}, {"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[25, 18, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]]}, {"name":"replicated_random_access_kernels_single.cl:60", "type":"resource", "data":[8, 14, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":60}]]}, {"name":"replicated_random_access_kernels_single.cl:61", "type":"resource", "data":[8, 14, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":61}]]}, {"name":"replicated_random_access_kernels_single.cl:66", "type":"resource", "data":[8, 7, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":66}]]}, {"name":"replicated_random_access_kernels_single.cl:71", "type":"resource", "data":[2, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":71}]]}, {"name":"replicated_random_access_kernels_single.cl:99", "type":"resource", "data":[8, 5, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[190, 351, 0, 0, 18], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"No Source Line", "type":"resource", "data":[2, 0, 0, 0, 0], "debug":[[{"filename":"", "line":0}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}]}, {"name":"replicated_random_access_kernels_single.cl:66", "type":"resource", "data":[48, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":66}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:68", "type":"resource", "data":[1, 1, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":68}]], "children":[{"name":"64-bit Integer Compare", "type":"resource", "count":1, "data":[1, 1, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:71", "type":"resource", "data":[63, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":71}]], "children":[{"name":"64-bit Xor", "type":"resource", "count":1, "data":[63, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:72", "type":"resource", "data":[34, 24, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":72}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"62"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:73", "type":"resource", "data":[62, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":73}]], "children":[{"name":"64-bit And", "type":"resource", "count":1, "data":[62, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:77", "type":"resource", "data":[34, 24, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":77}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"60"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:87", "type":"resource", "data":[522, 2074, 16, 0, 4], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":87}]], "children":[{"name":"Load", "type":"resource", "count":1, "data":[488, 2050, 16, 0, 4], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}, {"name":"Store", "type":"resource", "count":1, "data":[34, 24, 0, 0, 0], "details":[{"type":"text", "text":"Store uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free write to memory declared on %L.", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"61"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}], "replace_name":"true"}]}]}, {"name":"accessMemory_0.B5", "type":"basicblock", "children":[{"name":"Feedback", "type":"resource", "data":[72, 97, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[15, 26, 0, 0, 0]}, {"name":"replicated_random_access_kernels_single.cl:60", "type":"resource", "data":[15, 26, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":60}]]}, {"name":"replicated_random_access_kernels_single.cl:61", "type":"resource", "data":[15, 26, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":61}]]}, {"name":"replicated_random_access_kernels_single.cl:99", "type":"resource", "data":[27, 19, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]]}]}]}, {"name":"accessMemory_0.B6", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[198, 1437, 1, 0, 8], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[198, 1437, 1, 0, 8]}]}, {"name":"Feedback", "type":"resource", "data":[278, 462, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[222, 448, 0, 0, 0]}, {"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[18, 5, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]]}, {"name":"replicated_random_access_kernels_single.cl:97", "type":"resource", "data":[38, 9, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":97}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[81, 141, 0, 0, 7], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"replicated_random_access_kernels_single.cl:58", "type":"resource", "data":[1.5, 0, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]], "children":[{"name":"1-bit Or", "type":"resource", "count":3, "data":[1.5, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:97", "type":"resource", "data":[51.5, 2, 0, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":97}]], "children":[{"name":"1-bit And", "type":"resource", "count":2, "data":[2, 1, 0, 0, 0]}, {"name":"1-bit Or", "type":"resource", "count":3, "data":[1.5, 0, 0, 0, 0]}, {"name":"1-bit Xor", "type":"resource", "count":2, "data":[1, 1, 0, 0, 0]}, {"name":"11-bit Integer Add", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"11-bit Integer Compare", "type":"resource", "count":1, "data":[4, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_random_access_kernels_single.cl:99", "type":"resource", "data":[573, 2523, 19, 0, 0], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]], "children":[{"name":"64-bit Xor", "type":"resource", "count":1, "data":[64, 64, 0, 0, 0]}, {"name":"Load", "type":"resource", "count":3, "data":[126, 219, 0, 0, 0], "details":[{"type":"text", "text":"Load uses a Pipelined never-stall LSU"}, {"type":"brief", "text":"Pipelined never-stall LSU"}, {"type":"text", "text":"Stall-free read from memory declared on %L.", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"60"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}, {"name":"Store", "type":"resource", "count":1, "data":[383, 2240, 19, 0, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[220164,440329,572,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[2338,4125,0,0,0],"details":[{"text":"Global interconnect for 1 global load and 1 global store.","type":"text"},{"text":"For 1 global load and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[2,71,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[813,1194,0,0,27],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[8,130,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 65","type":"text"},{"text":"Register,\\n1 reg, 65 width","type":"brief"}],"name":"Private Variable: \\n - \'i\' (replicated_random_access_kernels_single.cl:58)","type":"resource"},{"data":[14,51,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11 and depth 1","type":"text"},{"text":"1 register of width 32 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 11 width by 1 depth,\\n1 reg, 32 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'ld\' (replicated_random_access_kernels_single.cl:66)","type":"resource"},{"data":[16,86,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 11","type":"text"},{"text":"1 register of width 32","type":"text"},{"text":"Register,\\n1 reg, 11 width,\\n1 reg, 32 width","type":"brief"}],"name":"Private Variable: \\n - \'ld\' (replicated_random_access_kernels_single.cl:97)","type":"resource"},{"data":[40,197,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 64 and depth 1","type":"text"},{"text":"Register,\\n1 reg, 64 width by 1 depth","type":"brief"}],"name":"Private Variable: \\n - \'ran\' (replicated_random_access_kernels_single.cl:47)","type":"resource"},{"data":[0,0,13,0,0],"details":[{"Additional information":[{"text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. ","type":"text"},{"links":[{"filename":"replicated_random_access_kernels_single.cl","line":58}],"text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)","type":"text"},{"text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"1024 words","Bank width":"64 bits","Implemented size":"32768 bytes","Number of banks":1,"Private memory":"Stall-Free with Replication","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"8192 bytes","Total replication":4,"type":"table"},{"text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented.","type":"brief"}],"name":"replicated_random_access_kernels_single.cl:60 (local_address)","type":"resource"},{"data":[0,0,13,0,0],"details":[{"Additional information":[{"text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. ","type":"text"},{"links":[{"filename":"replicated_random_access_kernels_single.cl","line":58}],"text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)","type":"text"},{"text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"1024 words","Bank width":"64 bits","Implemented size":"32768 bytes","Number of banks":1,"Private memory":"Stall-Free with Replication","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"8192 bytes","Total replication":4,"type":"table"},{"text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented.","type":"brief"}],"name":"replicated_random_access_kernels_single.cl:61 (loaded_data)","type":"resource"},{"data":[0,0,13,0,0],"details":[{"Additional information":[{"text":"Requested size 8192 bytes, implemented size 32768 bytes, replicated 4 times total, stall-free, 1 read and 1 write. ","type":"text"},{"links":[{"filename":"replicated_random_access_kernels_single.cl","line":58}],"text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)","type":"text"},{"text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details.","type":"text"},{"text":"Private memory implemented in on-chip block RAM.","type":"text"}],"Bank depth":"1024 words","Bank width":"64 bits","Implemented size":"32768 bytes","Number of banks":1,"Private memory":"Stall-Free with Replication","Reference":[{"links":[{"guide":"Best Practices Guide : Local Memory","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}],"text":"See %L for more information.","type":"text"}],"Requested size":"8192 bytes","Total replication":4,"type":"table"},{"text":"Stall-Free with Replication,\\n8192B requested,\\n32768B implemented.","type":"brief"}],"name":"replicated_random_access_kernels_single.cl:62 (update_val)","type":"resource"},{"children":[{"count":4,"data":[398,3081,7,0,8],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"","line":0}]],"name":"1-bit Or","type":"resource"}],"data":[400,3081,7,0,8],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,66,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"State","type":"resource"},{"count":1,"data":[64,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"64-bit Integer Add","type":"resource"},{"count":2,"data":[85,1,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"64-bit Integer Compare","type":"resource"},{"count":1,"data":[27,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"64-bit Select","type":"resource"},{"count":2,"data":[130,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"65-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[22,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"65-bit Integer Compare","type":"resource"},{"count":3,"data":[1.5,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"1-bit Or","type":"resource"}],"data":[330.5,67,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":58}]],"name":"replicated_random_access_kernels_single.cl:58","type":"resource"},{"children":[{"count":1,"data":[0,61,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":73}]],"name":"State","type":"resource"},{"count":1,"data":[61,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":73}]],"name":"64-bit Integer Add","type":"resource"},{"count":1,"data":[62,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":73}]],"name":"64-bit And","type":"resource"}],"data":[123,61,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":73}]],"name":"replicated_random_access_kernels_single.cl:73","type":"resource"},{"children":[{"count":1,"data":[52,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":47}]],"name":"65-bit Select","type":"resource"}],"data":[52,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":47}]],"name":"replicated_random_access_kernels_single.cl:47","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":66}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":66}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":66}]],"name":"11-bit Integer Compare","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":66}]],"name":"32-bit Integer Add","type":"resource"}],"data":[48,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":66}]],"name":"replicated_random_access_kernels_single.cl:66","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,1,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":68}]],"name":"64-bit Integer Compare","type":"resource"}],"data":[1,1,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":68}]],"name":"replicated_random_access_kernels_single.cl:68","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[63,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":71}]],"name":"64-bit Xor","type":"resource"}],"data":[63,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":71}]],"name":"replicated_random_access_kernels_single.cl:71","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[34,24,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":72}]],"name":"Store","type":"resource"}],"data":[34,24,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":72}]],"name":"replicated_random_access_kernels_single.cl:72","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[34,24,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":77}]],"name":"Store","type":"resource"}],"data":[34,24,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":77}]],"name":"replicated_random_access_kernels_single.cl:77","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[488,2050,16,0,4],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":87}]],"name":"Load","type":"resource"},{"count":1,"data":[34,24,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":87}]],"name":"Store","type":"resource"}],"data":[522,2074,16,0,4],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":87}]],"name":"replicated_random_access_kernels_single.cl:87","replace_name":"true","type":"resource"},{"children":[{"count":2,"data":[2,1,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"1-bit And","type":"resource"},{"count":3,"data":[1.5,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"1-bit Or","type":"resource"},{"count":2,"data":[1,1,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"1-bit Xor","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"11-bit Integer Add","type":"resource"},{"count":1,"data":[4,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"11-bit Integer Compare","type":"resource"},{"count":1,"data":[32,0,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"32-bit Integer Add","type":"resource"}],"data":[51.5,2,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":97}]],"name":"replicated_random_access_kernels_single.cl:97","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[64,64,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":99}]],"name":"64-bit Xor","type":"resource"},{"count":3,"data":[126,219,0,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":99}]],"name":"Load","type":"resource"},{"count":1,"data":[383,2240,19,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":99}]],"name":"Store","type":"resource"}],"data":[573,2523,19,0,0],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":99}]],"name":"replicated_random_access_kernels_single.cl:99","replace_name":"true","type":"resource"}],"compute_units":1,"data":[3123,9515,81,0,39],"debug":[[{"filename":"replicated_random_access_kernels_single.cl","line":47}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"Max global work dimension: 0","type":"text"},{"text":"Kernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"text"},{"text":"1 compute unit.\\nMax global work dimension: 0\\nKernel attribute \'uses_global_work_offset\' not specified. Add \'__attribute__((uses_global_work_offset(0)))\' to reduce area utilization if the kernel will always be enqueued with a 0 or NULL global_work_offset argument in clEnqueueNDRangeKernel. Add \'__attribute__((uses_global_work_offset(1)))\' to hide this suggestion without affecting kernel functionality.","type":"brief"}],"name":"accessMemory_0","total_kernel_resources":[3123,9515,81,0,39],"total_percent":[0.45651,0.209137,0.254924,0.691067,0],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[5463,13711,83,0,39],"debug_enabled":"true","max_resources":[1866240,3732480,11721,5760,93312],"name":"Kernel System","total":[225627,454040,655,0,39],"total_percent":[23.5959,12.1317,12.1646,5.58826,0],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"accessMemory_0", "children":[{"type":"bb", "id":3, "name":"accessMemory_0.B0", "details":[{"type":"table", "Latency":"9"}]}, {"type":"bb", "id":4, "name":"accessMemory_0.B1", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":5, "name":"accessMemory_0.B2", "details":[{"type":"table", "Latency":"9", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Entry to loop. ", "Loops To":"8"}]}, {"type":"bb", "id":6, "name":"accessMemory_0.B3", "details":[{"type":"table", "Latency":"0"}]}, {"type":"bb", "id":7, "name":"accessMemory_0.B4", "children":[{"type":"inst", "id":10, "name":"Store", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":72}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"update_val", "Start Cycle":"6", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":11, "name":"Store", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":77}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"local_address", "Start Cycle":"6", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":12, "name":"Load", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":87}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"11", "Latency":"469", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":13, "name":"Store", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":87}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Stores to":"loaded_data", "Start Cycle":"484", "Latency":"1", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":18, "name":"Loop Input", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":66}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"19"}]}, {"type":"inst", "id":19, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"489", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"489", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":8, "name":"accessMemory_0.B5", "details":[{"type":"table", "Latency":"0", "II":"1", "Subloops":"Yes", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":"Exit which branches back to loop. "}]}, {"type":"bb", "id":9, "name":"accessMemory_0.B6", "children":[{"type":"inst", "id":14, "name":"Load", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"loaded_data", "Start Cycle":"8", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":15, "name":"Load", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"update_val", "Start Cycle":"8", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":16, "name":"Load", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Pipelined never-stall", "Stall-free":"Yes", "Loads from":"local_address", "Start Cycle":"8", "Latency":"6", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":17, "name":"Store", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":99}]], "details":[{"type":"table", "Width":"64 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"22", "Latency":"40", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":20, "name":"Loop Input", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":97}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"21"}]}, {"type":"inst", "id":21, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"62", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"62", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"memtype", "id":22, "name":"Local Memory", "children":[{"type":"memsys", "id":23, "name":"local_address", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":60}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"8192B requested\\n32768B implemented"}], "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional Information":[{"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}], "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}, {"type":"memsys", "id":27, "name":"loaded_data", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":61}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"8192B requested\\n32768B implemented"}], "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional Information":[{"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}], "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}, {"type":"memsys", "id":31, "name":"update_val", "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":62}]], "details":[{"type":"table", "details":[{"type":"brief", "text":"8192B requested\\n32768B implemented"}], "Requested size":"8192 bytes", "Implemented size":"32768 bytes", "Number of banks":"1", "Bank width":"64 bits", "Bank depth":"1024 words", "Total replication":"4", "Additional Information":[{"type":"text", "text":"4 independent copies of this memory were created to enable simultaneous execution of 4 loop iterations defined at  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}, {"type":"text", "text":"You can reduce the number of copies of this memory by limiting the concurrency of its loop; see the OpenCL Programming Guide for details."}], "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Local Memory", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#chn1469549457114"}]}]}]}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":35, "name":"host", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":23, "to":16}, {"from":11, "to":23}, {"from":27, "to":14}, {"from":13, "to":27}, {"from":31, "to":15}, {"from":10, "to":31}, {"from":8, "to":4}, {"from":8, "to":5}, {"from":3, "to":5}, {"from":19, "to":6}, {"from":19, "to":18}, {"from":5, "to":18}, {"from":10, "to":19}, {"from":11, "to":19}, {"from":12, "to":19}, {"from":13, "to":19}, {"from":21, "to":8}, {"from":21, "to":20}, {"from":6, "to":20}, {"from":14, "to":21}, {"from":15, "to":21}, {"from":16, "to":21}, {"from":17, "to":21}, {"from":18, "to":10}, {"from":18, "to":11}, {"from":10, "to":12}, {"from":11, "to":12}, {"from":10, "to":13}, {"from":11, "to":13}, {"from":12, "to":13}, {"from":20, "to":14}, {"from":20, "to":15}, {"from":20, "to":16}, {"from":14, "to":17}, {"from":15, "to":17}, {"from":16, "to":17}, {"from":35, "to":12}, {"from":17, "to":35}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: accessMemory_0", "data":["", "", ""], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":42}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck blocks: accessMemory_0.B2, accessMemory_0.B4"}, {"type":"text", "text":"Use the %L report to view more details", "links":[{"view":"Fmax II Report"}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"accessMemory_0.B2", "data":["Yes", ">=1", "4"], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":58}]], "details":[{"type":"brief", "text":"Serial exe: Memory dependency"}, {"type":"text", "text":"Iteration executed serially across accessMemory_0.B4, accessMemory_0.B6. Only a single loop iteration will execute inside this region due to memory dependency:", "details":[{"type":"text", "text":"From: Load Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"87"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"99"}]}]}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"Stallable instruction: n/a"}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Nested Loops", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#rfr1469543500580"}]}], "children":[{"name":"accessMemory_0.B4", "data":["Yes", "~1", "0"], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":66}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: disabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instruction:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"87"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}, {"name":"accessMemory_0.B6", "data":["Yes", "~1", "5"], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":97}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instruction:", "details":[{"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"99"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}]}';
var fmax_iiJSON='{"basicblocks":{"accessMemory_0.B0":{"name":"accessMemory_0.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "accessMemory_0.B1":{"name":"accessMemory_0.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "accessMemory_0.B2":{"name":"accessMemory_0.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"432.0", "achieved_ii":1, "latency":9, "max_interleaving":1, "is_fmax_bottleneck":"Yes", "is_loop_header":"Yes", "is_single_block_loop":"No", "loop_layer":1, "details":[{"type":"text", "text":"Variable on loop carried feedback path", "details":[{"type":"text", "text":"From: Load Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"87"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"99"}]}]}], "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"58"}]}]}}, "accessMemory_0.B3":{"name":"accessMemory_0.B3", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "accessMemory_0.B4":{"name":"accessMemory_0.B4", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"432.0", "achieved_ii":1, "latency":489, "max_interleaving":1, "is_fmax_bottleneck":"Yes", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "details":[{"type":"text", "text":"Variable on loop carried feedback path", "details":[{"type":"text", "text":"From: Load Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"87"}]}, {"type":"text", "text":"To: Store Operation (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"99"}]}]}], "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"66"}]}]}}, "accessMemory_0.B5":{"name":"accessMemory_0.B5", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":1, "loop_location":{}}, "accessMemory_0.B6":{"name":"accessMemory_0.B6", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":62, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":2, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"replicated_random_access_kernels_single.cl", "line":"97"}]}]}}}, "functions":{"accessMemory_0":{"debug":[{"filename":"replicated_random_access_kernels_single.cl", "line":42}], "loop_hierachy":{"accessMemory_0__no_loop":["accessMemory_0.B0", "accessMemory_0.B1"], "accessMemory_0.B2":["accessMemory_0.B2", "accessMemory_0.B3", "accessMemory_0.B4", "accessMemory_0.B6", "accessMemory_0.B5"], "accessMemory_0.B4":["accessMemory_0.B4"], "accessMemory_0.B6":["accessMemory_0.B6"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units", "Hyper-Optimized Handshaking"], "children":[{"name":"accessMemory_0", "data":["Single work-item", "No", [1, 1, 1], 1, "Off"], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Max global work dimension: 0"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}, {"type":"text", "text":"Hyper-optimized handshaking disabled due to loop orchestration compiler optimization being disabled in loop accessMemory_0.B4."}], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":42}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"accessMemory_0", "data":[3123, 9515, 81, 0, 39], "debug":[[{"filename":"replicated_random_access_kernels_single.cl", "line":42}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[2338, 4125, 0, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[220164, 440329, 572, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[2, 71, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[225627, 454040, 655, 0, 39], "data_percent":[12.0899, 12.1646, 5.58826, 0]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[1866240, 3732480, 11721, 5760, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["random_access_kernels_single"],"name":"Project Name"},{"data":["Stratix 10, 1SX280HN2F43E2VG, dcp_bsp:pac_s10_dc"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":["18.1.2 Build 277 Pro"],"name":"Quartus Version"},{"data":["aoc /scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/replicated_random_access_kernels_single.cl -I/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/../common -fpc -fp-relaxed -board=pac_s10_dc -o /scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/bin/random_access_kernels_single.aocx"],"name":"Command"},{"data":["Thu Apr  9 14:32:01 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[{"debug":[[{"filename":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/replicated_random_access_kernels_single.cl","line":57}]],"details":["/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/replicated_random_access_kernels_single.cl:57:14: warning: expected safelen or array value with \'#pragma ivdep\' - ignored"],"name":"expected safelen or array value with \'#pragma ivdep\' - ignored"}]}';
var quartusJSON='{"quartusFitClockSummary":{"children":[{"details":[{"text":"This section contains a summary of the area and f<sub>MAX</sub> data generated by compiling the kernels through Quartus. \nTo generate the data, run a Quartus compile on the project created for this design. \nTo run the Quartus compile, please run command without flag -c, -rtl or -march=emulator","type":"text"}],"name":"Run Quartus compile to populate this section. See details for more information."}],"name":"Quartus Fit Summary"}}';
var fileJSON=[{"path":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/common/parameters.h", "name":"parameters.h", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/common/parameters.h", "content":"#ifndef SRC_COMMON_PARAMETERS_H_\012#define SRC_COMMON_PARAMETERS_H_\012\012/**\012 * Host specific parameters\012 */\012#define VERSION \"2.0.2.1\"\012#define DEFAULT_ARRAY_LENGTH 1073741824\012#define DEFAULT_PLATFORM -1\012#define DEFAULT_DEVICE -1\012#define HOST_DATA_TYPE cl_ulong\012#define HOST_DATA_TYPE_SIGNED cl_long\012#define NUM_KERNEL_REPLICATIONS 1\012#define DEFAULT_REPETITIONS 10\012\012/**\012 * Device specific parameters\012 */\012#define DEVICE_DATA_TYPE long\012#define DEVICE_DATA_TYPE_UNSIGNED ulong\012#define UNROLL_COUNT 1\012#define BUFFER_SIZE 1024\012#define SINGLE_KERNEL\012// Combine address calculation and data read loop to a single loop\012#define COMBINE_LOOPS\012/* #undef USE_SVM */\012\012/**\012Output separator\012*/\012#define HLINE \"-------------------------------------------------------------\\n\"\012\012\012\012#endif // SRC_COMMON_PARAMETERS_H_\012"}, {"path":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/replicated_random_access_kernels_single.cl", "name":"replicated_random_access_kernels_single.cl", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/frandom/cmake-build-syn-i/src/device/replicated_random_access_kernels_single.cl", "content":"/*\012Copyright (c) 2019 Marius Meyer\012\012Permission is hereby granted, free of charge, to any person obtaining a copy of\012this software and associated documentation files (the \"Software\"), to deal in\012the Software without restriction, including without limitation the rights to\012use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\012of the Software, and to permit persons to whom the Software is furnished to do\012so, subject to the following conditions:\012\012The above copyright notice and this permission notice shall be included in all\012copies or substantial portions of the Software.\012\012THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\012IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\012FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\012AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\012LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\012OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\012SOFTWARE.\012*/\012\012#include \"parameters.h\"\012\012/*\012Constant used to update the pseudo random number\012*/\012#define POLY 7\012\012/*\012Kernel, that will update the given data array accoring to a predefined pseudo-\012random access scheme. The overall data array might be equally split between\012multiple kernels. In that case, the index of the current split can be given\012to the kernel.\012\012@param data The data array that will be updated\012@param m The size of the data array\012@param data_chunk The chunk index that has to be updated by the kernel\012*/\012__attribute__((max_global_work_dim(0)))\012__kernel\012void accessMemory_0(__global DEVICE_DATA_TYPE_UNSIGNED  volatile * restrict data,\012                        const DEVICE_DATA_TYPE_UNSIGNED m,\012                        const DEVICE_DATA_TYPE_UNSIGNED data_chunk,\012                        const uint kernel_number) {\012    // Initiate the pseudo random number\012    DEVICE_DATA_TYPE_UNSIGNED ran = 1;\012\012    // calculate the start of the address range this kernel is responsible for\012    #ifndef SINGLE_KERNEL\012    DEVICE_DATA_TYPE_UNSIGNED const address_start = kernel_number * data_chunk;\012    #endif\012\012    DEVICE_DATA_TYPE_UNSIGNED const mupdate = 4 * m;\012\012    // do random accesses\012#pragma ivdep(data)\012    for (DEVICE_DATA_TYPE_UNSIGNED i=0; i< mupdate / BUFFER_SIZE; i++) {\012\012        DEVICE_DATA_TYPE_UNSIGNED local_address[BUFFER_SIZE];\012        DEVICE_DATA_TYPE_UNSIGNED loaded_data[BUFFER_SIZE];\012        DEVICE_DATA_TYPE_UNSIGNED update_val[BUFFER_SIZE];\012\012        // calculate next addresses\012        __attribute__((opencl_unroll_hint(1)))\012        for (int ld=0; ld< BUFFER_SIZE; ld++) {\012            DEVICE_DATA_TYPE v = 0;\012            if (((DEVICE_DATA_TYPE) ran) < 0) {\012                v = POLY;\012            }\012            ran = (ran << 1) ^ v;\012            update_val[ld] = ran;\012            DEVICE_DATA_TYPE_UNSIGNED address = (ran >> 3) & (m - 1);\012            #ifndef SINGLE_KERNEL\012            local_address[ld] = address - address_start;\012            #else\012            local_address[ld] = address;\012            #endif\012#ifndef COMBINE_LOOPS\012        }\012\012        // load the data of the calculated addresses from global memory\012        __attribute__((opencl_unroll_hint(UNROLL_COUNT)))\012        for (int ld=0; ld< BUFFER_SIZE; ld++) {\012#endif\012            #ifdef SINGLE_KERNEL\012            loaded_data[ld] = data[local_address[ld]];\012            #else\012            if (local_address[ld] < data_chunk) {\012                loaded_data[ld] = data[local_address[ld]];\012            }\012            #endif\012        }\012\012        // store back the calculated addresses from global memory\012        __attribute__((opencl_unroll_hint(UNROLL_COUNT)))\012        for (int ld=0; ld< BUFFER_SIZE; ld++) {\012            #ifdef SINGLE_KERNEL\012            data[local_address[ld]] = loaded_data[ld] ^update_val[ld];\012            #else\012            if (local_address[ld] < data_chunk) {\012                data[local_address[ld]] = loaded_data[ld] ^ update_val[ld];\012            }\012            #endif\012        }\012    }\012}\012\012"}];
