var areaJSON='{"columns":["", "ALUTs", "FFs", "RAMs", "DSPs", "MLABs", "Details"], "debug_enabled":"true", "type":"module", "total_percent":[24.0219, 12.3822, 12.3601, 5.52854, 0.555556], "total":[229921, 461337, 648, 32, 58], "name":"Kernel System", "max_resources":[1866240, 3732480, 11721, 5760, 93312], "children":[{"name":"Static Partition", "type":"partition", "children":[{"name":"Board interface", "type":"resource", "data":[220164, 440329, 572, 0, 0], "details":[{"type":"text", "text":"Platform interface logic."}]}]}, {"name":"Global interconnect", "type":"resource", "data":[4121, 5284, 0, 0, 0], "details":[{"type":"text", "text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect."}, {"type":"brief", "text":"For 2 global loads and 1 global store."}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Global Memory Interconnect", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}]}]}, {"name":"System description ROM", "type":"resource", "data":[2, 71, 2, 0, 0], "details":[{"type":"text", "text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program."}, {"type":"brief", "text":"Contains information for the host."}]}, {"name":"calc_0", "compute_units":1, "type":"function", "total_percent":[0.767838, 0.364047, 0.419373, 0.631345, 0.555556], "total_kernel_resources":[5634, 15653, 74, 32, 58], "details":[{"type":"text", "text":"Number of compute units: 1"}, {"type":"brief", "text":"1 compute unit."}], "children":[{"name":"Function overhead", "type":"resource", "data":[1463, 1467, 0, 0, 6], "details":[{"type":"text", "text":"Kernel dispatch logic."}, {"type":"brief", "text":"Kernel dispatch logic."}]}, {"name":"Private Variable: \\n - \'i\' (replicated_stream_kernels_single.cl:22)", "type":"resource", "data":[16, 130, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]], "details":[{"type":"text", "text":"Type: Register"}, {"type":"text", "text":"1 register of width 32"}, {"type":"text", "text":"1 register of width 33"}, {"type":"brief", "text":"Register,\\n1 reg, 32 width,\\n1 reg, 33 width"}]}, {"name":"calc_0.B0", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[1, 126, 0, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[1, 91, 0, 0, 0]}, {"name":"replicated_stream_kernels_single.cl:22", "type":"resource", "data":[0, 34, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]]}, {"name":"replicated_stream_kernels_single.cl:32", "type":"resource", "data":[0, 1, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":32}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[10, 9, 1, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"replicated_stream_kernels_single.cl:22", "type":"resource", "data":[123, 1, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]], "children":[{"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"32-bit Integer Compare", "type":"resource", "count":2, "data":[44, 1, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":1, "data":[14, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_stream_kernels_single.cl:32", "type":"resource", "data":[10, 0, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":32}]], "children":[{"name":"32-bit Integer Compare", "type":"resource", "count":1, "data":[10, 0, 0, 0, 0]}], "replace_name":"true"}]}]}, {"name":"calc_0.B1", "type":"basicblock", "children":[{"name":"State", "type":"resource", "data":[75, 2898, 5, 0, 0], "details":[{"type":"brief", "text":"Live values and control logic"}, {"type":"text", "text":"Resources for live values and control logic. To reduce this area:", "details":[{"type":"text", "text":"reduce size of local variables"}, {"type":"text", "text":"reduce scope of local variables, localizing them as much as possible"}, {"type":"text", "text":"reduce number of nested loops"}]}], "children":[{"name":"No Source Line", "type":"resource", "data":[75, 2898, 5, 0, 0]}]}, {"name":"Feedback", "type":"resource", "data":[49, 9, 0, 0, 0], "details":[{"type":"brief", "text":"Loop-carried dependencies"}, {"type":"text", "text":"Resources for loop-carried dependencies. To reduce this area:", "details":[{"type":"text", "text":"reduce number and size of loop-carried variables"}]}], "children":[{"name":"replicated_stream_kernels_single.cl:22", "type":"resource", "data":[49, 9, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]]}]}, {"name":"Cluster logic", "type":"resource", "data":[379, 727, 18, 0, 0], "details":[{"type":"brief", "text":"Logic required to efficiently support sets of operations that do not stall"}, {"type":"text", "text":"Logic required to efficiently support sets of operations that do not stall. This area cannot be affected directly."}]}, {"name":"Computation", "type":"resource", "children":[{"name":"replicated_stream_kernels_single.cl:22", "type":"resource", "data":[104, 0, 0, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]], "children":[{"name":"1-bit And", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Integer Add", "type":"resource", "count":1, "data":[32, 0, 0, 0, 0]}, {"name":"33-bit Integer Add", "type":"resource", "count":1, "data":[33, 0, 0, 0, 0]}, {"name":"33-bit Integer Compare", "type":"resource", "count":1, "data":[11, 0, 0, 0, 0]}, {"name":"33-bit Select", "type":"resource", "count":2, "data":[27, 0, 0, 0, 0]}], "replace_name":"true"}, {"name":"replicated_stream_kernels_single.cl:29", "type":"resource", "data":[1401, 3493, 16, 16, 26], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":29}]], "children":[{"name":"32-bit Select", "type":"resource", "count":16, "data":[208, 0, 0, 0, 0]}, {"name":"Hardened Floating-point Multiply", "type":"resource", "count":16, "data":[768, 1536, 0, 16, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[425, 1957, 16, 0, 26], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"replicated_stream_kernels_single.cl:35", "type":"resource", "data":[1658, 4005, 16, 16, 26], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":35}]], "children":[{"name":"1-bit Or", "type":"resource", "count":1, "data":[1, 0, 0, 0, 0]}, {"name":"32-bit Select", "type":"resource", "count":16, "data":[208, 0, 0, 0, 0]}, {"name":"Hardened Floating-point Add", "type":"resource", "count":16, "data":[1024, 2048, 0, 16, 0]}, {"name":"Load", "type":"resource", "count":1, "data":[425, 1957, 16, 0, 26], "details":[{"type":"text", "text":"Load uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}, {"name":"replicated_stream_kernels_single.cl:41", "type":"resource", "data":[345, 2788, 18, 0, 0], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":41}]], "children":[{"name":"Store", "type":"resource", "count":1, "data":[345, 2788, 18, 0, 0], "details":[{"type":"text", "text":"Store uses a Burst-coalesced LSU"}, {"type":"brief", "text":"Burst-coalesced LSU"}]}], "replace_name":"true"}]}]}]}]}';
var area_srcJSON='{"children":[{"children":[{"data":[220164,440329,572,0,0],"details":[{"text":"Platform interface logic.","type":"text"}],"name":"Board interface","type":"resource"}],"name":"Static Partition","type":"partition"},{"data":[4121,5284,0,0,0],"details":[{"text":"Global interconnect for 2 global loads and 1 global store. Reduce number of global loads and stores to simplify global interconnect.","type":"text"},{"text":"For 2 global loads and 1 global store.","type":"brief"},{"links":[{"guide":"Best Practices Guide : Global Memory Interconnect","link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#hnj1476724450050"}],"text":"See %L for more information","type":"text"}],"name":"Global interconnect","type":"resource"},{"data":[2,71,2,0,0],"details":[{"text":"This read-only memory contains information for the host about the system and about each kernel in the system, including kernel names, arguments, and attributes. The system description ROM ensures that the binary image on the FPGA is compatible with the host program.","type":"text"},{"text":"Contains information for the host.","type":"brief"}],"name":"System description ROM","type":"resource"},{"children":[{"data":[438,745,19,0,0],"details":[{"text":"Feedback+Cluster logic","type":"brief"}],"name":"Data control overhead","type":"resource"},{"data":[1463,1467,0,0,6],"details":[{"text":"Kernel dispatch logic.","type":"text"},{"text":"Kernel dispatch logic.","type":"brief"}],"name":"Function overhead","type":"resource"},{"data":[16,130,0,0,0],"details":[{"text":"Type: Register","type":"text"},{"text":"1 register of width 32","type":"text"},{"text":"1 register of width 33","type":"text"},{"text":"Register,\\n1 reg, 32 width,\\n1 reg, 33 width","type":"brief"}],"name":"Private Variable: \\n - \'i\' (replicated_stream_kernels_single.cl:22)","type":"resource"},{"children":[{"count":2,"data":[76,2989,5,0,0],"debug":[[{"filename":"","line":0}]],"name":"State","type":"resource"}],"data":[76,2989,5,0,0],"name":"No Source Line","type":"resource"},{"children":[{"count":1,"data":[0,34,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"State","type":"resource"},{"count":2,"data":[64,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"32-bit Integer Add","type":"resource"},{"count":2,"data":[44,1,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"32-bit Integer Compare","type":"resource"},{"count":1,"data":[14,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"32-bit Select","type":"resource"},{"count":2,"data":[66,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"33-bit Integer Add","type":"resource"},{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"1-bit And","type":"resource"},{"count":1,"data":[11,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"33-bit Integer Compare","type":"resource"},{"count":2,"data":[27,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"33-bit Select","type":"resource"}],"data":[227,35,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"name":"replicated_stream_kernels_single.cl:22","type":"resource"},{"children":[{"count":1,"data":[0,1,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":32}]],"name":"State","type":"resource"},{"count":1,"data":[10,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":32}]],"name":"32-bit Integer Compare","type":"resource"}],"data":[10,1,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":32}]],"name":"replicated_stream_kernels_single.cl:32","type":"resource"},{"children":[{"count":16,"data":[208,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":29}]],"name":"32-bit Select","type":"resource"},{"count":16,"data":[768,1536,0,16,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":29}]],"name":"Hardened Floating-point Multiply","type":"resource"},{"count":1,"data":[425,1957,16,0,26],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":29}]],"name":"Load","type":"resource"}],"data":[1401,3493,16,16,26],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":29}]],"name":"replicated_stream_kernels_single.cl:29","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[1,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":35}]],"name":"1-bit Or","type":"resource"},{"count":16,"data":[208,0,0,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":35}]],"name":"32-bit Select","type":"resource"},{"count":16,"data":[1024,2048,0,16,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":35}]],"name":"Hardened Floating-point Add","type":"resource"},{"count":1,"data":[425,1957,16,0,26],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":35}]],"name":"Load","type":"resource"}],"data":[1658,4005,16,16,26],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":35}]],"name":"replicated_stream_kernels_single.cl:35","replace_name":"true","type":"resource"},{"children":[{"count":1,"data":[345,2788,18,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":41}]],"name":"Store","type":"resource"}],"data":[345,2788,18,0,0],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":41}]],"name":"replicated_stream_kernels_single.cl:41","replace_name":"true","type":"resource"}],"compute_units":1,"data":[5634,15653,74,32,58],"debug":[[{"filename":"replicated_stream_kernels_single.cl","line":22}]],"details":[{"text":"Number of compute units: 1","type":"text"},{"text":"1 compute unit.","type":"brief"}],"name":"calc_0","total_kernel_resources":[5634,15653,74,32,58],"total_percent":[0.767838,0.364047,0.419373,0.631345,0.555556],"type":"function"}],"columns":["","ALUTs","FFs","RAMs","DSPs","MLABs","Details"],"data":[9757,21008,76,32,58],"debug_enabled":"true","max_resources":[1866240,3732480,11721,5760,93312],"name":"Kernel System","total":[229921,461337,648,32,58],"total_percent":[24.0219,12.3822,12.3601,5.52854,0.555556],"type":"module"}';
var mavJSON='{"nodes":[{"type":"kernel", "id":2, "name":"calc_0", "children":[{"type":"bb", "id":3, "name":"calc_0.B0", "details":[{"type":"table", "Latency":"35"}]}, {"type":"bb", "id":4, "name":"calc_0.B1", "children":[{"type":"inst", "id":6, "name":"Load", "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":29}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"39", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":7, "name":"Load", "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":35}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"39", "Latency":"512", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":8, "name":"Store", "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":41}]], "details":[{"type":"table", "Width":"512 bits", "Type":"Burst-coalesced", "Stall-free":"No", "Start Cycle":"590", "Latency":"64", "Reference":[{"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Load-Store Units", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#yeo1491314105959"}]}]}]}, {"type":"inst", "id":9, "name":"Loop Input", "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]], "details":[{"type":"table", "Start Cycle":"0", "Latency":"1", "Loops To":"10"}]}, {"type":"inst", "id":10, "name":"Loop End", "details":[{"type":"table", "Start Cycle":"654", "Latency":"1"}]}], "details":[{"type":"table", "Latency":"654", "II":"1", "Subloops":"No", "Pipelined":"Yes", "Fmax Bottlenecks":"No", "Loop Info":""}]}, {"type":"bb", "id":5, "name":"calc_0.B2", "details":[{"type":"table", "Latency":"0"}]}]}, {"type":"memtype", "id":1, "name":"Global Memory", "children":[{"type":"memsys", "id":11, "name":"host", "details":[{"type":"table", "Number of banks":"1"}]}]}], "links":[{"from":3, "to":9}, {"from":6, "to":10}, {"from":7, "to":10}, {"from":8, "to":10}, {"from":10, "to":5}, {"from":9, "to":6}, {"from":9, "to":7}, {"from":6, "to":8}, {"from":7, "to":8}, {"from":11, "to":6}, {"from":8, "to":11}, {"from":11, "to":7}]}';
var loopsJSON='{"columns":["", "Pipelined", "II", "Speculated iterations", "Details"], "children":[{"name":"Kernel: calc_0", "data":["", "", ""], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":12}]], "details":[{"type":"brief", "text":"Single work-item execution"}, {"type":"text", "text":"Single work-item execution"}, {"type":"text", "text":"Fmax bottlenck block: None"}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Kernels", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#ipp1476408832230"}]}], "children":[{"name":"calc_0.B1", "data":["Yes", "~1", "4"], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":22}]], "details":[{"type":"brief", "text":" "}, {"type":"text", "text":"Hyper-Optimized loop structure: enabled."}, {"type":"text", "text":"II is an approximation due to the following stallable instructions:", "details":[{"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"replicated_stream_kernels_single.cl", "line":"29"}]}, {"type":"text", "text":"Load Operation (%L)", "links":[{"filename":"replicated_stream_kernels_single.cl", "line":"35"}]}, {"type":"text", "text":"Store Operation (%L)", "links":[{"filename":"replicated_stream_kernels_single.cl", "line":"41"}]}]}, {"type":"text", "text":"Maximum concurrent iterations: Capacity of loop", "details":[{"type":"text", "text":"Use the %L viewer to estimate capacity", "links":[{"view":"Fmax II Report"}]}]}, {"type":"text", "text":"See %L for more information", "links":[{"guide":"Best Practices Guide : Loops in a Single Work-Item Kernel", "link":"https://www.intel.com/content/www/us/en/programmable/documentation/mwh1391807516407.html#wfa1476380079940"}]}], "children":[]}]}]}';
var fmax_iiJSON='{"basicblocks":{"calc_0.B0":{"name":"calc_0.B0", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":35, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}, "calc_0.B1":{"name":"calc_0.B1", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":654, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"Yes", "is_single_block_loop":"Yes", "loop_layer":1, "loop_location":{"details":[{"type":"text", "text":"Loop:  (%L)", "links":[{"filename":"replicated_stream_kernels_single.cl", "line":"22"}]}]}}, "calc_0.B2":{"name":"calc_0.B2", "target_fmax":"Not specified", "target_ii":"Not specified", "achieved_fmax":"480.0", "achieved_ii":1, "latency":0, "max_interleaving":1, "is_fmax_bottleneck":"No", "is_loop_header":"No", "is_single_block_loop":"No", "loop_layer":0, "loop_location":{}}}, "functions":{"calc_0":{"debug":[{"filename":"replicated_stream_kernels_single.cl", "line":12}], "loop_hierachy":{"calc_0__no_loop":["calc_0.B0", "calc_0.B2"], "calc_0.B1":["calc_0.B1"]}}}}';
var summaryJSON='{"performanceSummary":{"name":"Kernel Summary", "columns":["Kernel Name", "Kernel Type", "Autorun", "Workgroup Size", "# Compute Units", "Hyper-Optimized Handshaking"], "children":[{"name":"calc_0", "data":["Single work-item", "No", [1, 1, 1], 1, "On"], "details":[{"type":"text", "text":"Kernel type: Single work-item"}, {"type":"text", "text":"Required workgroup size: (1, 1, 1)"}, {"type":"text", "text":"Maximum workgroup size: 1"}], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":12}]]}]}, "estimatedResources":{"name":"Estimated Resource Usage", "columns":["Kernel Name", "ALUTs ", "FFs  ", "RAMs ", "DSPs ", "MLABs"], "children":[{"name":"calc_0", "data":[5634, 15653, 74, 32, 58], "debug":[[{"filename":"replicated_stream_kernels_single.cl", "line":12}]]}, {"name":"Global Interconnect", "classes":["summary-highlight", "nohover"], "data":[4121, 5284, 0, 0, 0]}, {"name":"Board Interface", "classes":["summary-highlight", "nohover"], "data":[220164, 440329, 572, 0, 0]}, {"name":"System description ROM", "classes":["summary-highlight", "nohover"], "data":[2, 71, 2, 0, 0]}, {"name":"Total", "classes":["summary-highlight", "nohover"], "data":[229921, 461337, 648, 32, 58], "data_percent":[12.32, 12.3601, 5.52854, 0.555556]}, {"name":"Available", "classes":["summary-highlight", "nohover"], "data":[1866240, 3732480, 11721, 5760, 0]}]}, "compileWarnings":{"name":"Compile Warnings", "children":[]}}';
var infoJSON='{"name":"Info","rows":[{"classes":["info-table"],"data":["stream_kernels_single"],"name":"Project Name"},{"data":["Stratix 10, 1SX280HN2F43E2VG, dcp_bsp:pac_s10_dc"],"name":"Target Family, Device, Board"},{"data":["19.4.0 Build 64"],"name":"AOC Version"},{"data":["18.1.2 Build 277 Pro"],"name":"Quartus Version"},{"data":["aoc /scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/device/replicated_stream_kernels_single.cl -I/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/device/../common -fpc -fp-relaxed -board=pac_s10_dc -o /scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/bin/stream_kernels_single.aocx"],"name":"Command"},{"data":["Wed Apr 15 16:37:53 2020"],"name":"Reports Generated At"}]}';
var warningsJSON='{"rows":[]}';
var quartusJSON='{"quartusFitClockSummary":{"children":[{"details":[{"text":"This section contains a summary of the area and f<sub>MAX</sub> data generated by compiling the kernels through Quartus. \nTo generate the data, run a Quartus compile on the project created for this design. \nTo run the Quartus compile, please run command without flag -c, -rtl or -march=emulator","type":"text"}],"name":"Run Quartus compile to populate this section. See details for more information."}],"name":"Quartus Fit Summary"}}';
var fileJSON=[{"path":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/common/parameters.h", "name":"parameters.h", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/common/parameters.h", "content":"#ifndef SRC_COMMON_PARAMETERS_H_\012#define SRC_COMMON_PARAMETERS_H_\012\012/**\012 * Host specific parameters\012 */\012#define VERSION \"2.1.4.1\"\012#define DEFAULT_REPETITIONS 10\012#define DEFAULT_ARRAY_LENGTH 134217728\012#define DEFAULT_PLATFORM -1\012#define DEFAULT_DEVICE -1\012#define HOST_DATA_TYPE cl_float\012#define NUM_KERNEL_REPLICATIONS 1\012\012/**\012 * Device specific parameters\012 */\012#define DEVICE_ARRAY_DATA_TYPE float16\012#define DEVICE_SCALAR_DATA_TYPE float\012#define VECTOR_COUNT 16\012#define UNROLL_COUNT 1\012#define BUFFER_SIZE 1\012#define INNER_LOOP_BUFFERS\012/* #undef USE_SVM */\012\012/**\012Output separator\012*/\012#define HLINE \"-------------------------------------------------------------\\n\"\012\012#define COPY_KERNEL_TYPE 0\012#define SCALE_KERNEL_TYPE 1\012#define ADD_KERNEL_TYPE 2\012#define TRIAD_KERNEL_TYPE 3\012\012\012#endif // SRC_COMMON_PARAMETERS_H_\012"}, {"path":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/device/replicated_stream_kernels_single.cl", "name":"replicated_stream_kernels_single.cl", "has_active_debug_locs":false, "absName":"/scratch/pc2-mitarbeiter/mariusme/fpga-0011/pac/global_mem_svm/stream_fpga/cmake-build-syn-nobuffer/src/device/replicated_stream_kernels_single.cl", "content":"/*\012STREAM kernels a single kernel combining all operations.\012 They can be selected using the operation_type switch.\012\0120 will be replaced by the build script with the ID of the current replication.\012 That means the kernels will be named copy_0, copy_1, ... up to the number of given replications.\012*/\012#include \"parameters.h\"\012\012__kernel\012__attribute__((uses_global_work_offset(0)))\012void calc_0(__global const DEVICE_ARRAY_DATA_TYPE *restrict in1,\012          __global const DEVICE_ARRAY_DATA_TYPE *restrict in2,\012          __global DEVICE_ARRAY_DATA_TYPE *restrict out,\012          const DEVICE_SCALAR_DATA_TYPE scalar,\012          const uint array_size,\012          const uint operation_type) {\012#ifndef INNER_LOOP_BUFFERS\012        DEVICE_ARRAY_DATA_TYPE buffer1[BUFFER_SIZE];\012#endif\012    uint number_elements = array_size / VECTOR_COUNT;\012    for(uint i = 0;i<number_elements;i += BUFFER_SIZE){\012#ifdef INNER_LOOP_BUFFERS\012        DEVICE_ARRAY_DATA_TYPE buffer1[BUFFER_SIZE];\012#endif\012        // Load first array into buffer\012        __attribute__((opencl_unroll_hint(UNROLL_COUNT)))\012        for (uint k = 0;k<BUFFER_SIZE;k++) {\012            buffer1[k] = scalar * in1[i + k];\012        }\012        // optionally load second array into buffer for add and triad\012        if (operation_type == ADD_KERNEL_TYPE || operation_type == TRIAD_KERNEL_TYPE) {\012            __attribute__((opencl_unroll_hint(UNROLL_COUNT)))\012            for (uint k = 0;k<BUFFER_SIZE;k++) {\012                buffer1[k] += in2[i + k];\012            }\012        }\012        // Calculate result and write back to output array depending on chosen operation type\012        __attribute__((opencl_unroll_hint(UNROLL_COUNT)))\012        for (uint k = 0;k<BUFFER_SIZE;k++) {\012            out[i + k] = buffer1[k];\012                   \012	}\012    }\012}\012\012"}];
